openapi: 3.0.3
info:
  title: 'Studscore API'
  description: 'StudScore API | One of the best API for student data migration'
  version: 1.0.0
servers:
  -
    url: 'https://api.test'
paths:
  /api/v1/login:
    post:
      summary: 'Get a JWT via given credentials.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: jeremie65@example.com
                password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: f
              required:
                - email
                - password
      security: []
  /api/v1/refresh:
    post:
      summary: 'Refresh a token.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
  /api/v1/user-profile:
    get:
      summary: 'Get the authenticated User.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
  /api/v1/logout:
    post:
      summary: 'Log the user out (Invalidate the token).'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
  '/api/v1/matters/{id}':
    get:
      summary: 'Display the specified Matter resource.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Matters
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the matter.'
        example: 8
        required: true
        schema:
          type: integer
  /api/v1/matters:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Matters
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                format:
                  type: string
                  description: ''
                  example: beatae
  '/api/v1/scores/{id}':
    get:
      summary: 'Display the specified Score resource.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Scores
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the score.'
        example: 12
        required: true
        schema:
          type: integer
  /api/v1/scores:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Scores
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                format:
                  type: string
                  description: ''
                  example: reprehenderit
  /api/v1/students:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Students
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                format:
                  type: string
                  description: ''
                  example: ab
  '/api/v1/students/{id}':
    get:
      summary: 'Display the specified Student resource.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Students
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the student.'
        example: 12
        required: true
        schema:
          type: integer
  /api/v1/teachers:
    get:
      summary: 'Display or send a listing of the Teachers resource.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Teachers
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                format:
                  type: string
                  description: ''
                  example: possimus
  '/api/v1/teachers/{id}':
    get:
      summary: 'Display the specified Teacher resource.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Teachers
    put:
      summary: 'Update the specified resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Teachers
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the teacher.'
        example: 15
        required: true
        schema:
          type: integer
  /api/v1/users:
    get:
      summary: 'Display or send a listing of the Users resource.'
      description: "<p> https://api.test/api/v1/users </p>\nAllow autorised user to get listing of Users resource.\n\n<h3>Get linsting of Users resource in specifique format:</h3>\n<p> https://api.test/api/v1/users?format=value </p>\n<strong>format</strong> parmeter can have as value <strong>json</strong> or <strong>csv</strong>.\n\n<h3>Additional functionnalities:</h3>\nWith this endpoint, you can chain multiple parameters on URI to make filter on Users resource retrive from database.\nSo If you want the User resources which contain name like <strong>luc</strong> you have to use the parameters name:\n\n<strong style=\"text-decoration:underline\">Ex:</strong>\n<span> https://api.test/api/v1/users?name=luc </span>\n\n<strong style=\"text-decoration:underline\">Note:</strong> This filter is only allow for [<strong style=\"text-decoration:underline\">name</strong>, <strong style=\"text-decoration:underline\">type_user</strong>, <strong style=\"text-decoration:underline\">email</strong>, <strong style=\"text-decoration:underline\">valid</strong>] fields"
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Users
    post:
      summary: 'Store a newly created User resource in storage.'
      description: 'The username must be two words (LastName FirstName) separate by space'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ykyyaijoognfjqhfmeewdilxkieqgiwuoqszbkvhcwbtwkpcdfmcrjjgkeydxsnlpvjtfexixytgzytdzfxrjnzhpmnqglxahkpujuuzsyxtxgimtx
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 100 characters.'
                  example: aydmgikyiwejdglfhpxhywgedscqgaedlpdxbvfdhinvplwbpzgqggddvnjowzjalmiqcohsguyowtonpwdkqwcbqqamijh
                password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: lr
                sex:
                  type: string
                  description: 'Must be one of <code>M</code> or <code>F</code>.'
                  example: M
                type_user:
                  type: string
                  description: 'Must be one of <code>admin</code>, <code>academic-manager</code>, <code>teacher</code>, <code>student-respo</code>, or <code>client</code>.'
                  example: academic-manager
              required:
                - name
                - email
                - password
                - sex
                - type_user
  '/api/v1/users/{id}':
    get:
      summary: 'Display the specified User.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Users
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
tags:
  -
    name: Endpoints
    description: ''
  -
    name: Matters
    description: "\nAPI endpoints for managing app Matters. Actions on this resource is only allow to 'Admin' and 'Client' users."
  -
    name: Scores
    description: "\nAPI endpoints for managing app Scores. Actions on this resource is only allow to 'Admin' and 'Client' users."
  -
    name: Students
    description: "\nAPI endpoints for managing app Students. Actions on this resource is only allow to 'Admin' and 'Client' users."
  -
    name: Teachers
    description: "\nAPI endpoints for managing app Teachers. Actions on this resource is only allow to 'Admin' and 'Client' users."
  -
    name: Users
    description: "\nAPI endpoints for managing app Users. Actions on this resource is only allow to 'Admin' and 'Client' users."
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
